<%@ page language="java" contentType="text/html; charset=UTF-8"	pageEncoding="UTF-8"%><%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%><%@ taglib uri="http://www.springframework.org/security/tags"	prefix="security"%><%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>TestCenter - View Projects</title><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><!--<link rel="stylesheet" type="text/css" href="http://www.ok-soft-gmbh.com/jqGrid/jquery.jqGrid-3.8.2/css/ui.jqgrid.css" />--><link rel="stylesheet" type="text/css"	href="http://www.ok-soft-gmbh.com/jqGrid/jquery.jqGrid-4.3.1/css/ui.jqgrid.css" /><!--<link rel="stylesheet" type="text/css" href="css/KenTestTheme/jquery-ui-1.9.0.custom.css"/>--><!--<link rel="stylesheet" type="text/css" href="css/start/jquery-ui-1.9.0.custom.css"/>--><link rel="stylesheet" type="text/css"	href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.18/themes/redmond/jquery-ui.css" /><link rel="stylesheet" type="text/css"	href="http://www.ok-soft-gmbh.com/jqGrid/jquery.jqGrid-4.3.1/plugin/ui.multiselect.css" /><style type="text/css">hr {	border: 0;	width: 100%;	color: #f00;	background-color: #b6c4cd;	height: 1px;	margin-top: 10px;	margin-bottom: 10px;}html,body {	font-size: 75%;}label,input {	display: block;}input.text {	margin-bottom: 12px;	padding: .4em;}fieldset {	padding: 0;	border: 0;	margin-top: 25px;}h1 {	font-size: 1.2em;	margin: .6em 0;}div#users-contain {	width: 350px;	margin: 20px 0;}div#users-contain table {	margin: 1em 0;	border-collapse: collapse;	width: 100%;}div#users-contain table td,div#users-contain table th {	border: 10px solid #eee;	padding: .6em 10px;	text-align: left;}.ui-dialog .ui-state-error {	padding: .3em;}.validateTips {	border: 1px solid transparent;	padding: 0.3em;}.ui-jqgrid .ui-jqgrid-htable th div {	height: auto;	overflow: hidden; //	padding-left: 4px; //	padding-right: 4px;	padding-top: 4px;	padding-bottom: 4px;	position: relative;	vertical-align: text-top; //	white-space: normal !important;}.progressBarDiv {	-moz-box-shadow: 0px 0px 4px #333;	-webkit-box-shadow: 0px 0px 4px #333;	box-shadow: 1px 1px 3px #333;}.progressBarDiv:hover { //	zoom: 200%; //.	redBar .background-color: #333;}.blueBar {	background-color: #4573a7; //	background-image: url(images/redProgressBar.jpg);	height: auto;}.redBar {	background-color: #AE3B37; //	background-color: #C2423D; //	background-image: url(images/redProgressBar.jpg);	height: auto}.redBar:hover { //	background-color: #A64E5E;}.orangeBar {	background-color: #DDC23F; //	background-color: #E9AF32;}.greenBar {	background-color: #6eaf37; //	background-color: #89a54e; //	background-image: url(images/green_bg3.png);}.greenBar:hover { //	-moz-transform: scale(2); //	background-color: #89a54e;}.pgPercent {	width: 20%;	float: left;	color: #4573a7;	font-weight: bold;	display: inline-block;	'}/* .ui-jqgrid .ui-jqgrid-titlebar-close span {display:none;}*/</style><!-- <script type="text/javascript" src="js/jquery-1.8.2.js"></script>--><script type="text/javascript"	src="http://code.jquery.com/jquery-1.7.1.min.js"></script><!-- <script type="text/javascript" src="js/jquery-ui-1.9.0.custom.js"></script>--><script type="text/javascript"	src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.18/jquery-ui.min.js"></script><script type="text/javascript"	src="http://www.ok-soft-gmbh.com/jqGrid/jquery.jqGrid-4.3.1/plugin/ui.multiselect.js"></script><script type="text/javascript"	src="http://www.ok-soft-gmbh.com/jqGrid/jquery.jqGrid-4.3.1/js/i18n/grid.locale-en.js"></script><script type="text/javascript"	src="http://www.ok-soft-gmbh.com/jqGrid/jquery.jqGrid-4.3.1/js/jquery.jqGrid.src.js"></script><script type="text/javascript">	//         	//var jq = jQuery.noConflict();	$(function() {		$('.ui-jqgrid-titlebar-close', '#report').remove();		$("#viewDetails").button();		$("#deleteProject").button();				$("#accordion").accordion({			autoHeight:true,			icons:{ "header": "ui-icon-triangle-1-e", "headerSelected": "ui-icon-triangle-1-s"}			 });					    $sliderValue="";          // Slider          $('#newFeatureSlider').slider({             // orientation: "vertical",              value : 94,                         min: 0,              max: 100,              slide: function(event, ui) {              	                                             $('input[name=newFeature]').val(ui.value);                                              switch (ui.value) {                                //case 94:$("#newFeatureSlider_value").text("Recommended");                               //break;                                                         }                    },              stop: function(event, ui) {                  $sliderValue=ui.value;                    }          });         $sliderValue2="";         $('#regressionSlider').slider({                          value : 96,                           min: 0,               max: 100,               slide: function(event, ui) {             	                                              $('input[name=regression]').val(ui.value);                           switch (ui.value) {                            //case 94:$("#newFeatureSlider_value").text("Recommended");                           //break;                                                     }                     },               stop: function(event, ui) {                   $sliderValue2=ui.value;                     }           });  		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////		// Varibles 		var projectName = $("#projectName"), regression = $("#regression"), newFeature = $("#newFeature"), minSev1 = $("#minSev1"), minSev2 = $("#minSev2"), minSev3 = $("#minSev3"), minSev4 = $("#minSev4"), allFields = $(				[]).add(projectName).add(regression).add(newFeature).add(				minSev1).add(minSev2).add(minSev3).add(minSev4), tips = $(".validateTips");		// End of Varibles 				///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////		// Create Project Dialog Validation 		function updateTips(t) {			tips.text(t).addClass("ui-state-highlight");			/*setTimeout(function() {				tips.removeClass( "ui-state-highlight", 1500 );			}, 500 );*/		}		function checkRange(o, n, min, max) {			var value = parseInt(o.val(), 10);			//alert(o.val()+ " : "+ min + " to " + max);			if (value >= min && value <= max) {				return true;			} else {				o.addClass("ui-state-error");								updateTips(n + " must be between " + min + " and " + max + ".");				return false;			}		}		function checkLength(o, n, min, max) {			if (o.val().length > max || o.val().length < min) {				o.addClass("ui-state-error");				updateTips("Length of " + n + " must be between " + min						+ " and " + max + ".");				return false;			} else {				return true;			}		}		function checkRegexp(o, regexp, n) {			if (!(regexp.test(o.val()))) {				o.addClass("ui-state-error");				updateTips(n);				return false;			} else {				return true;			}		}		// End of Create Project Dialog Validation				///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////		// Create Project Dialog 		$("#dialog-form")				.dialog(						{							autoOpen : false,							height : 430,							width : 510,							modal : true,							buttons : {								"Create a Project" : function() {									var bValid = true;									allFields.removeClass("ui-state-error");									bValid = bValid											&& checkLength(projectName,													"Project Name", 3, 16);									bValid = bValid											&& checkRange(regression,													"Required Regression", 1,													100);									bValid = bValid											&& checkRange(newFeature,													"Required New Feature", 1,													100);									bValid = bValid											&& checkRange(minSev1,													"Maximum Sev 1 Defects", 1,													1000);									bValid = bValid											&& checkRange(minSev2,													"Maximum Sev 2 Defects", 1,													1000);									bValid = bValid											&& checkRange(minSev3,													"Maximum Sev 3 Defects", 1,													1000);									bValid = bValid											&& checkRange(minSev4,													"Maximum Sev 4 Defects", 1,													1000);									//bValid = bValid && checkLength( email, "email", 6, 80 );											//bValid = bValid && checkRegexp( projectName, /^[a-z]([0-9a-z_])+$/i, "Project Name may consist of a-z, 0-9, underscores, begin with a letter." );									// From jquery.validate.js (by joern), contributed by Scott Gonzalez: http://projects.scottsplayground.com/email_address_validation/									//bValid = bValid && checkRegexp( email, /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i, "eg. ui@jquery.com" );									bValid = bValid											&& checkRegexp(regression, /^\d+$/,													"Required Regression field only allows : 1-100");									bValid = bValid											&& checkRegexp(newFeature, /^\d+$/,													"Required New Feature field only allows : 1-100");									if (bValid) {										// Create New Project using Ajax										$.post("newprojectAJAX", {											companyID : '${companyID}',											projectName : projectName.val(),											regression : regression.val(),											newFeature : newFeature.val(),											minSev1 : minSev1.val(),											minSev2 : minSev2.val(),											minSev3 : minSev3.val(),											minSev4 : minSev4.val()										}, function(result) {											if (result == 'ok') {												$(this).dialog("close");												//$("#report").trigger("reloadGrid");												//$entityList0.trigger("reloadGrid", [{page:1}]);**												window.location.reload();											} else {												updateTips(result);											}										});									}								},								Cancel : function() {									$(this).dialog("close");								}							},							 open: function()							 {								 $("#dialog-form").keypress(function(e) 										 {							 							      if (e.keyCode == $.ui.keyCode.ENTER) {							        $(this).parent().find("button:eq(0)").trigger("click");							      }							    });							 },							close : function() {								allFields.val("").removeClass("ui-state-error");							}						});		// End of Create Project Dialog 			///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////		// Create Project Dialog Button		$("#create-project").button().click(function() {			$("#dialog-form").dialog("open");		});		$("#deleteProject").click(function(){ 			 // Get the currently selected row		    toDelete = jQuery('#report').jqGrid('getGridParam','selrow');					    // You'll get a pop-up confirmation dialog, and if you say yes,		    // it will call "delete.php" on your server.		    jQuery('#report').jqGrid('delGridRow',toDelete, { url: 'deleteprojectAJAX',		    height:200,			reloadAfterSubmit:false,			afterSubmit:function(data,postd){				console.log(data);				console.log(postd);				return {0:true};			},			afterComplete:function(data,postd){				//window.location.reload();				return true;			},						msg: "Are you sure you want to Delete\n Project "+toDelete+" \n and all its associated Data?"		});		   		});		// End of Create Project Dialog Button			///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	});	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	// Load Main Grid	jQuery(document).ready(					function() {						var grid = jQuery('#report');						var subGrid = jQuery("#sub");						///////// Functions For each Row 									var functionsMapping = {							// here we define the implementations of the custom formatter which we use							"setOverallBarChart" : function(cellValue, opts,rowObject) {								var barChartHtml = "";								var remainingPercent = 0;								var targetreached = false;								var currentPercent = rowObject.regressionRequiredPercent;								remainingPercent = 100 - currentPercent;								barChartHtml = "<div style='width:100%;display:inline-block;'  >";								barChartHtml = barChartHtml										+ "<div style='width:75%;display:inline-block;float: left;' class='progressBarDiv' id='progressBarDiv'  >";								if (targetreached) {									var barChartHtml = barChartHtml											+ "<div  class='greenBar' style='width:"+currentPercent+"%; float: left;display:inline-block;'> </div>";								} else {									var barChartHtml = barChartHtml											+ "<div  class='orangeBar' style='width:"+currentPercent+"%;  float: left;display:inline-block;'> </div>";								}								var barChartHtml = barChartHtml										+ "<div class='redBar' style='width:"+remainingPercent+"%;float: left; display:inline-block;'> </div>";								var barChartHtml = barChartHtml + "</div>";								var barChartHtml = barChartHtml										+ "<div id='spacer' style='width:5%; float: left;display:inline-block;'>&nbsp;</div>";								var barChartHtml = barChartHtml										+ "<div class='pgPercent'>"										+ rowObject.regressionRequiredPercent										+ "% </div>";								var barChartHtml = barChartHtml + "</div>";								return barChartHtml;							},							"setRegressionBarChart" : function(cellValue, opts,									rowObject) {								var barChartHtml = "";								var remainingPercent = 0;								var targetreached = true;								var currentPercent = rowObject.regressionCurrentPercent;								remainingPercent = 100 - currentPercent;								barChartHtml = "<div style='width:100%;display:inline-block;'  >";								barChartHtml = barChartHtml										+ "<div style='width:75%;display:inline-block;float: left;' class='progressBarDiv' id='progressBarDiv'  >";								if (rowObject.regressionCurrentPercent >= rowObject.regressionRequiredPercent) {									var barChartHtml = barChartHtml											+ "<div  class='greenBar' style='width:80%; float: left;display:inline-block;'> </div>";								} else {									var barChartHtml = barChartHtml											+ "<div  class='orangeBar' style='width:80%; float: left;display:inline-block;'> </div>";								}								var barChartHtml = barChartHtml										+ "<div class='redBar' style='width:20%;float: left; display:inline-block;'> </div>";								var barChartHtml = barChartHtml + "</div>";								var barChartHtml = barChartHtml										+ "<div id='spacer' style='width:5%; float: left;display:inline-block;'>&nbsp;</div>";								var barChartHtml = barChartHtml										+ "<div class='pgPercent'>"										+ rowObject.regressionCurrentPercent										+ "% </div>";								var barChartHtml = barChartHtml + "</div>";								return barChartHtml;							},							"setNewFeatureBarChart" : function(cellValue, opts,									rowObject) {								var barChartHtml = "";								var remainingPercent = 0;								var targetreached = false;								var currentPercent = rowObject.newFeatureCurrentPercent;								remainingPercent = 100 - currentPercent;								barChartHtml = "<div style='width:100%;display:inline-block;'  >";								barChartHtml = barChartHtml										+ "<div style='width:75%;display:inline-block;float: left;' class='progressBarDiv' id='progressBarDiv'  >";								if (rowObject.newFeatureCurrentPercent >= rowObject.newFeatureRequiredPercent) {									var barChartHtml = barChartHtml											+ "<div  class='greenBar' style='width:"+currentPercent+"%; float: left;display:inline-block;'> </div>";								} else {									var barChartHtml = barChartHtml											+ "<div  class='orangeBar' style='width:"+currentPercent+"%;  float: left;display:inline-block;'> </div>";								}								var barChartHtml = barChartHtml										+ "<div class='redBar' style='width:"+remainingPercent+"%;float: left; display:inline-block;'> </div>";								var barChartHtml = barChartHtml + "</div>";								var barChartHtml = barChartHtml										+ "<div id='spacer' style='width:5%; float: left;display:inline-block;'>&nbsp;</div>";								var barChartHtml = barChartHtml										+ "<div class='pgPercent'>"										+ rowObject.newFeatureCurrentPercent										+ "% </div>";								var barChartHtml = barChartHtml + "</div>";								return barChartHtml;							},							"unSetBarChart" : function(cellValue, opts,									rowObject) {								return cellvalue;							},							"setProgressBarTitle" : function(rowId, val,									rowObject, cm, rdata) {								return 'title=" Required : '										+ rowObject.regressionRequiredPercent										+ ' % -  Current : '										+ rowObject.regressionRequiredPercent										+ '%"';							},							"percentFmatter" : function percentFmatter(									cellvalue, options, rowObject) {								return cellvalue + " %";							},							"unformatPercent" : function(cellvalue, options) {								return cellvalue.replace(" %", "");							},							"showImage" : function(item) {								var isAparentProject = true;								if (isAparentProject) {									return "<img src='images/ok.png' />";								} else {									return "";								}							},							"InterFinalPriceFormatter" : function(cellValue,									opts, rowObject) {								return cellValue + "Testing price formatter";							}						};						//////// End of Function 						////// Get Table Data									$								.ajax({									type : "GET",									url : 'company/projectColsAndNames/${companyID}',									dataType : "json",									success : function(result) {										var columnNames = result.colName;										var columnModel = result.colModel;										for ( var i = 0; i < columnModel.length; i++) {											cm = columnModel[i];											if (cm.hasOwnProperty("formatter")													&& functionsMapping															.hasOwnProperty(cm.formatter)) {												// fix colM[i].formatter from string to the function												cm.formatter = functionsMapping[cm.formatter];											}											if (cm.hasOwnProperty("unformat")													&& functionsMapping															.hasOwnProperty(cm.unformat)) {												// fix colM[i].formatter from string to the function												cm.unformat = functionsMapping[cm.unformat];											}										}										$("#report")												.jqGrid(														{															url : 'company/summary/${companyID}',															datatype : 'json',															mtype : "GET",															colNames : columnNames,															colModel : columnModel,															caption : "Projects",															////// Tree Grid 															//	treeGrid: true,															//	treeGridModel: 'adjacency',           															//	ExpandColumn: 'projectName',															//	ExpandColClick: true,															//  treedatatype: "local",															////////////////															loadonce : true, // wont sort (work) with tree grid - turn table into local data hence no refresh															//	altClass: 'altRow',															//	altRows: true,															//	autowidth: true,															emptyrecords : 'No Projects',															scroll : 1,															//rownumbers: true,															//rownumWidth: 40,															gridview : true,															viewrecords : true, // Total number in pager															pager : '#pager',															sortable : true,															sortname : 'projectID',															sortorder : "DSC",															height : 400,															width : 900,															jsonReader : {																root : "projects",																id : "projectID",																repeatitems : false,																page : function(																		obj) {																	return 1;																},																total : function(																		obj) {																	return 1;																},																records : function(																		obj) {																	return obj.projects.length;																}															},															// Single Click 															onSelectRow : function(																	ids) {																if (ids != null) {																	var rowData = grid																			.getRowData(ids);																	subGrid																			.setGridParam({																				url : "project/projectRelatedObjects/"+ ids,page : 1																			})																	//subGrid.setGridParam({ url: "company/${company.companyID}", page: 1 });																							subGrid																			.setCaption(																					rowData['projectName'])																			.trigger(																					'reloadGrid');																}															},															// Double Click															ondblClickRow : function(																	id, rowid) {																var proj = grid																		.getRowData(id);																// TODO :: Change URL to Details View 																						window.location = '/Clients/Details/'																		+ proj.projectID;															},															afterInsertRow : function(																	rowid,																	rowdata,																	rowelem) {															}														})										//.jqGrid ('navGrid', '#pager', { edit: false, add: false, del: false, refresh: true, view: true },{},{},{},{multipleSearch:true})													grid.jqGrid('navGrid', '#pager', {											del : false,											add : false,											edit : false,											refresh : true										}, {}, {}, {}, {											multipleSearch : true,											closeAfterSearch : true,											closeAfterReset : true,											Find : "Search Project List",											drag : true,											Reset : "Reset Project List",											caption : "Search Project List"										})										grid.jqGrid('filterToolbar', {											stringResult : true,											searchOnEnter : false										})										// Select Columns										grid.jqGrid('navButtonAdd', '#pager', {											caption : "Columns",											//buttonicon: "ui-icon-calculator", 											title : "Choose Project Columns",											onClickButton : function() {												grid.jqGrid('columnChooser');											}										})										//grid.jqGrid('excelExport',{tag:'excel', url:''});										// Test Button 										jQuery("#viewDetails")												.click(														function() {															var id = grid																	.jqGrid(																			'getGridParam',																			'selrow');															if (id) {																window.location = '/Clients/Details/'																		+ id;																//var proj= grid.jqGrid('getRowData',id);																//jQuery("#dialog-modal" ).dialog( "open" );																//alert("Project ID="+proj.projectID+" Project ID="+proj.projectName+"...");															} else {																//alert("Please select row");															}														})										// subgrid													subGrid												.jqGrid(														{															caption : "Project:",															height : 200,															width : 220,															datatype : "json",															colNames : ['Related object',	'Value' ],															colModel : [																	{																		name : 'relatedObjectName',																		width : 20,																		sortable : true																	},																	{																		name : 'relatedObjectValue',																		width : 10,																		align : 'center',																		sortable : true,																		resizable : true,																		search : true,																		sorttype : 'number'																	}															],															//rowNum: 5,															//rowList: [5, 10, 20],															pager : jQuery('#subpager'),															sortname: 'relatedobjectIDrelatedobjectID',															scroll : 1,															emptyrecords : '0',															autoload:false,															viewrecords : true,															sortorder: "ASC",															jsonReader : {																root : "relatedObjects",																id : "relatedobjectIDrelatedobjectID",																repeatitems : false,																page : function(																		obj) {																	return 1;																},																total : function(																		obj) {																	return 1;																},																records : function(																		obj) {																	return obj.relatedObjects.length;																}															},															ondblClickRow : function(																	id, rowid) {																var proj = grid																		.getRowData(id);																//alert(proj.projectName);																	//window.location = '/Clients/Details/' + ret.ClientID;  																window.location = '/Clients/Details/'																		+ proj.projectID;															},														}).navGrid('#subpager',														{															add : false,															edit : false,															del : false,															search : false														});									}								});					});	//</script></head><body>	<div>		Home 1 &nbsp;&nbsp; &nbsp;&nbsp; | &nbsp;&nbsp; &nbsp;&nbsp; <a			href="viewcompanies.html?companyID=${companyID}">Companies</a>&nbsp;&nbsp;		&nbsp;&nbsp; | &nbsp;&nbsp; &nbsp;&nbsp; <a			href="viewprojects.html?companyID=${companyID}">${projectsDisplayName}</a>&nbsp;&nbsp;		&nbsp;&nbsp; | &nbsp;&nbsp; &nbsp;&nbsp; <a href="#"></a>${reportsDisplayName}&nbsp;&nbsp;		&nbsp;&nbsp; | &nbsp;&nbsp; &nbsp;&nbsp; <a href="#"></a>${defectsDisplayName}&nbsp;&nbsp;		&nbsp;&nbsp; | &nbsp;&nbsp; &nbsp;&nbsp; <a href="#"></a>${requirementsDisplayName}&nbsp;&nbsp;		&nbsp;&nbsp; | &nbsp;&nbsp; &nbsp;&nbsp; <a			href="viewcycles.html?companyID=${companyID}">All			${cyclesDisplayName}</a>&nbsp;&nbsp; &nbsp;&nbsp; | &nbsp;&nbsp;		&nbsp;&nbsp; <a href="#"></a>${usersDisplayName}&nbsp;&nbsp;		&nbsp;&nbsp; | &nbsp;&nbsp; &nbsp;&nbsp; <a href="#"></a>${environmentsDisplayName}	</div>	<br />	<table style="width: 100%;">		<tr>			<td style="width: 70%;">				<table id="report">					<tr>						<td />					</tr>				</table>				<div id="pager" />				</div> <br />				<button id="create-project">Create</button>				<button id="viewDetails">View Details</button>				<button id="deleteProject">Delete</button>			</td>			<td valign="top">				<table>					<tr>						<td>							<div id="accordion" style="width: 220px">								<h3>Cycle</h3>								<div>									<a href="#">Create New Cycle</a>								</div>								<h3>Test Run</h3>								<div></div>								<h3>Test Plan</h3>								<div></div>								<h3>Section 4</h3>								<div></div>								</div>						</td>					</tr>					<tr>						<td>							<table id="sub"></table>							<div id="subpager"></div>						</td>					</tr>				</table>			</td>		</tr>	</table>	<div id="dialog-form" title="Create new Project">		<p class="validateTips">All form fields are required.</p>		<form>			<fieldset>				<table width="100%" border="0" >					<tr>						<td colspan="2" valign="top">							<table width="100%">								<tr>									<td valign="top"><label for="projectName"										style="float: left;">Project Name :</label></td>									<td><input type="text" name="projectName" id="projectName"										style="width: 200px; display: inline-block; float: left;"										class="text ui-widget-content ui-corner-all" /></td>								</tr>							</table>						</td>					</tr>					<tr>						<td colspan="2">							<hr />						</td>					</tr>					<tr>						<td valign="top">							<table width="100%" border="0" cellpadding="5px">								<tr>									<td><label for="regression">Required New Feature %</label></td>									<td>										<table width="100%">											<tr>												<td><input type="text" name="newFeature"													id="newFeature" value="94" style="width: 20px;"													class="text ui-widget-content ui-corner-all" /></td>												<td>%</td>											</tr>																					</table>									</td>									<td><label for="regression">Required Regression %</label></td>									<td>										<table width="100%">											<tr>												<td><input type="text" name="regression"													id="regression" value="96" style="width: 20px;"													class="text ui-widget-content ui-corner-all" /></td>												<td>%</td>											</tr>																					</table>									</td>								</tr>								<tr>									<td colspan="2" align="center"><div id="newFeatureSlider" style="width:90%"></div></td>									<td colspan="2" align="center"><div id="regressionSlider" style="width:90%"></div></td>								</tr>								<tr>									<td colspan="4">										<hr />									</td>								</tr>								<tr>									<td valign="top"><label for="minSev1">Maximum											Allowed Sev 1 Defects</label></td>									<td>										<table width="100%">											<tr>												<td><input type="text" name="minSev1" id="minSev1"													value="10" style="width: 20px;"													class="text ui-widget-content ui-corner-all" /></td>												<td></td>											</tr>										</table>									</td>									<td valign="top"><label for="minSev2">Maximum											Allowed Sev 2 Defects </label></td>									<td>										<table width="100%">											<tr>												<td><input type="text" name="minSev2" id="minSev2"													value="25" style="width: 20px;"													class="text ui-widget-content ui-corner-all" /></td>												<td></td>											</tr>										</table>									</td>								</tr>								<tr>									<td valign="top"><label for="minSev3">Maximum											Allowed Sev 3 Defects</label></td>									<td>										<table width="100%">											<tr>												<td><input type="text" name="minSev3" id="minSev3"													value="50" style="width: 20px;"													class="text ui-widget-content ui-corner-all" /></td>												<td></td>											</tr>										</table>									</td>									<td valign="top"><label for="minSev4">Maximum											Allowed Sev 4 Defects</label></td>									<td>										<table width="100%">											<tr>												<td><input type="text" name="minSev4" id="minSev4"													value="100" style="width: 20px;"													class="text ui-widget-content ui-corner-all" /></td>												<td></td>											</tr>										</table>									</td>								</tr>							</table>						</td>					</tr>				</table>				<!--  <label for="email">Email</label>		<input type="email" name="email" id="email" value="" style="width:95%;" class="text ui-widget-content ui-corner-all" />		-->			</fieldset>		</form>	</div>	<div class="contextMenu" id="myMenu1" style="display: none">		<ul style="width: 200px">			<li id="add"><span class="ui-icon ui-icon-plus"				style="float: left"></span> <span				style="font-size: 11px; font-family: Verdana">Add Row</span></li>			<li id="edit"><span class="ui-icon ui-icon-pencil"				style="float: left"></span> <span				style="font-size: 11px; font-family: Verdana">Edit Row</span></li>			<li id="del"><span class="ui-icon ui-icon-trash"				style="float: left"></span> <span				style="font-size: 11px; font-family: Verdana">Delete Row</span></li>		</ul>	</div>	</body></html>